name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

  release-macos:
    needs: create-release
    runs-on: macos-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build and Package for macOS
        run: npm run package:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS Release (Intel)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./release/P+55-${{ github.ref_name }}.dmg
          asset_name: P+55-${{ github.ref_name }}.dmg
          asset_content_type: application/octet-stream
      
      - name: Upload macOS Release (ARM64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./release/P+55-${{ github.ref_name }}-arm64.dmg
          asset_name: P+55-${{ github.ref_name }}-arm64.dmg
          asset_content_type: application/octet-stream

      - name: Upload macOS latest update info
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./release/latest-mac.yml
          asset_name: latest-mac.yml
          asset_content_type: text/yaml

  release-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build and Package for Windows
        run: npm run package:win-setup
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version without 'v' prefix
        id: version
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
        shell: bash

      - name: Upload Windows Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./release/P+55 Setup ${{ env.VERSION }}.exe
          asset_name: P+55-Setup-${{ github.ref_name }}.exe
          asset_content_type: application/octet-stream
          
      - name: Upload Windows latest update info
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./release/latest.yml
          asset_name: latest.yml
          asset_content_type: text/yaml